public class MyQueue {
    public int count;
    public int pointer;
    public List<int> myQueue;
    
    /** Initialize your data structure here. */
    public MyQueue()
    {
        myQueue = new List<int>();
    }
    
    /** Push element x to the back of queue. */
    public void Push(int x)
    {
        myQueue.Add(x);
        count++;
    }
    
    /** Removes the element from in front of queue and returns that element. */
    public int Pop()
    {
        int toRemove = myQueue[pointer];
        count--;
        pointer++;
        return toRemove;
    }
    
    /** Get the front element. */
    public int Peek()
    {
        int toPeek = myQueue[pointer];
        return toPeek;
    }
    
    /** Returns whether the queue is empty. */
    public bool Empty() 
    {
        if(count <= 0)
        {
            return true;
        }
        else
            return false;
    }
}

/**
 * Your MyQueue object will be instantiated and called as such:
 * MyQueue obj = new MyQueue();
 * obj.Push(x);
 * int param_2 = obj.Pop();
 * int param_3 = obj.Peek();
 * bool param_4 = obj.Empty();
 */
