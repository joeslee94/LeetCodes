public class Solution
{
    public int[] SumZero(int n)
    {
            HashSet<int> addToZero = new HashSet<int>();
            List<int> positveNums = new List<int>();

            if (n == 0)
            {
                int[] zero = { 0 };
                return zero;
            }
            else if (n % 2 != 0)
            {
                addToZero.Add(0);

                for (int i = 1; i <= ((n - 1) / 2); i++)
                {
                    positveNums.Add(i);
                    addToZero.Add(i);
                }

                foreach (var posnum in positveNums)
                {
                    int negativenum = posnum * -1;
                    addToZero.Add(negativenum);
                }

                int[] oddSumZero = addToZero.ToArray();
                return oddSumZero;
            }
            else if (n % 2 == 0)
            {
                for (int i = 1; i <= (n / 2); i++)
                {
                    positveNums.Add(i);
                    addToZero.Add(i);
                }

                foreach (var posnum in positveNums)
                {
                    int negativenum = posnum * -1;
                    addToZero.Add(negativenum);
                }

                int[] evenSumZero = addToZero.ToArray();
                return evenSumZero;
            }
            else
            {
                int[] zero = { 0 };
                return zero;
            }
    }
}
