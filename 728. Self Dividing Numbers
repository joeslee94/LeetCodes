public class Solution
{
    public IList<int> SelfDividingNumbers(int left, int right)
    {
            List<int> numRange = new List<int>();
            HashSet<int> selfDividingNums = new HashSet<int>();

            for (int i = left; i <= right; i++)
            {
                numRange.Add(i);
            }

            foreach (var num in numRange)
            {
                string numstr = num.ToString();
                char[] numchararr = numstr.ToCharArray();
                int length = 0;

                for (int i = 0; i < numchararr.Length; i++)
                {
                    int divisor = numchararr[i] - '0';

                    if (divisor != 0 && num % divisor == 0)
                    {
                        length++;
                    }
                }
                if (length == numchararr.Length)
                {
                    selfDividingNums.Add(num);
                }
            }
            return selfDividingNums.ToList();
    }
}
