public class Solution
{
    public int NumIslands(char[][] grid)
    {
        int numOfIslands = 0;
        for(int row = 0; row < grid.Length; row++)
        {
            for(int column = 0; column < grid[row].Length; column++)
            {
                if(grid[row][column] == '1')
                {
                    numOfIslands++;
                    DepthForSearch(row, column, grid);
                }
            }
        }
        return numOfIslands;
    }
    
    public void DepthForSearch(int row, int column, char[][] grid)
    {
        if(row >= 0 && row < grid.Length && column >= 0 && column < grid[row].Length)
        {
            if(grid[row][column] == '1')
            {
                grid[row][column] = '0';
                DepthForSearch(row + 1, column, grid);
                DepthForSearch(row - 1, column, grid);
                DepthForSearch(row, column + 1, grid);
                DepthForSearch(row, column - 1, grid);
            }
        }
    }
}
