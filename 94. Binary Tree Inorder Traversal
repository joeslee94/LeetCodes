/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution
{
    public IList<int> InorderTraversal(TreeNode root)
    {
        List<int> result = new List<int>();
        
        if(root != null)
        {    
            return TraverseInOrder(root, result);    
        }
        else
            return result;
    }
    
    public List<int> TraverseInOrder(TreeNode node, List<int> result)
    {
        if(node.left != null)
        {
            TraverseInOrder(node.left, result);
        }
        
        result.Add(node.val);
        
        if(node.right != null)
        {
            TraverseInOrder(node.right, result);
        }
        
        return result;
    }
}
